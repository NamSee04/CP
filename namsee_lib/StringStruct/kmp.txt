/*
    Những mùa thu khác có thể trở về
Nhưng mùa thu của chúng ta đã chết...
*/

// #pragma GCC optimize("Ofast,O3") 
// #pragma GCC target("avx,avx2,fma,sse4")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;

#ifdef Debug
#include "./namsee_lib/Debug.h"
#else
#define dbg(...)
#endif

#define FOR(i,a,b) for(int i=(a),_b=(b); i<=_b; i++)
#define FORD(i,a,b) for(int i=(a),_b=(b); i>=_b; i--)
#define REP(i,a) for(int i=0,_a=(a); i<_a; i++)

#define F first
#define S second
#define MP make_pair
#define PB push_back

#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define lb lower_bound
#define ub upper_bound
#define ins insert

#define nl "\n"

#define vi vector<long long>
#define vii vector<pair<long long, long long>>
#define pi pair<ll, ll>

template <class T>
using Tree =
    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

template<class X, class Y> bool ckmin(X& a, const Y& b) {return a > b ? a = b, 1 : 0;}
template<class X, class Y> bool ckmax(X& a, const Y& b) {return a < b ? a = b, 1 : 0;}

// const ll M = 1e9 + 9; // (1ll << 61) - 1
// mt19937 rng((uint32_t)chrono::steady_clock::now().time_since_epoch().count());
// const ll B = uniform_int_distribution<ll>(311, M - 1)(rng);



int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    #ifdef Debug
    freopen("in.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    #endif
    // KMP for this prob https://cses.fi/problemset/result/10658769/
    string s, p; cin >> s >> p;
    int n = s.size(), m = p.size();
    s = " " + s;
    p = " " + p;
    vector<int> pi_p(m + 1);
    for (int i = 2, j = 0; i <= m; i++) {
        while (j > 0 && p[j + 1] != p[i]) j = pi_p[j];
        if (p[j + 1] == p[i]) j++;
        pi_p[i] = j;
    }
    int ans = 0;
    for (int i = 1, j = 0; i <= n; i++) {
        while (j > 0 && p[j + 1] != s[i]) j = pi_p[j];
        if (p[j + 1] == s[i])j++;
        if (j == m) {
            ans ++;
            j = pi_p[j];
        }
         
    }
    cout << ans;
    return 0;
}